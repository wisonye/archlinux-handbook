* Valgrind

#+BEGIN_SRC bash
  doas pacman -Syu debuginfod glibc valgrind
#+END_SRC


After that, you must export the follow env:

#+BEGIN_SRC bash
  # Fish
  set --export DEBUGINFOD_URLS "https://debuginfod.archlinux.org"

  # Bash
  export DEBUGINFOD_URLS="https://debuginfod.archlinux.org"

#+END_SRC

Otherwise, you will see the following error when running =valgrind=:

#+BEGIN_SRC bash
  ==21276== Memcheck, a memory error detector
  ==21276== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
  ==21276== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
  ==21276== Command: ls
  ==21276== 

  valgrind:  Fatal error at startup: a function redirection
  valgrind:  which is mandatory for this platform-tool combination
  valgrind:  cannot be set up.  Details of the redirection are:
  valgrind:  
  valgrind:  A must-be-redirected function
  valgrind:  whose name matches the pattern:      strlen
  valgrind:  in an object with soname matching:   ld-linux-x86-64.so.2
  valgrind:  was not found whilst processing
  valgrind:  symbols from the object with soname: ld-linux-x86-64.so.2
  valgrind:  
  valgrind:  Possible fixes: (1, short term): install glibc's debuginfo
  valgrind:  package on this machine.  (2, longer term): ask the packagers
  valgrind:  for your Linux distribution to please in future ship a non-
  valgrind:  stripped ld.so (or whatever the dynamic linker .so is called)
  valgrind:  that exports the above-named function using the standard
  valgrind:  calling conventions for this platform.  The package you need
  valgrind:  to install for fix (1) is called
  valgrind:  
  valgrind:    On Debian, Ubuntu:                 libc6-dbg
  valgrind:    On SuSE, openSuSE, Fedora, RHEL:   glibc-debuginfo
  valgrind:  
  valgrind:  Note that if you are debugging a 32 bit process on a
  valgrind:  64 bit system, you will need a corresponding 32 bit debuginfo
  valgrind:  package (e.g. libc6-dbg:i386).
  valgrind:  
  valgrind:  Cannot continue -- exiting now.  Sorry. 
#+END_SRC
